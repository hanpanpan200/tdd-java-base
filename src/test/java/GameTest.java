/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import org.junit.Before;
import org.junit.Test;
import tw.Answer;
import tw.Game;
import tw.model.GuessResult;
import tw.generator.AnswerGenerator;

import java.util.List;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class GameTest {


    private final Answer actualAnswer = Answer.createAnswer("1 2 3 4");
    private Game game;

    @Before
    public void setUp() throws Exception {
        AnswerGenerator answerGenerator = mock(AnswerGenerator.class);
        when(answerGenerator.generate()).thenReturn(actualAnswer);
        game = new Game(answerGenerator);
    }


    @Test
    public void should_return_0A0B_when_no_number_is_correct() {
        //when
        String inputAnswerStr = "5 6 7 8";
        String expectValue = "0A0B";
        //then
        validateGuessNumber(inputAnswerStr, expectValue);
    }

    @Test
    public void should_return_1A0B_when_1_is_correct() {
        //given
        String inputAnswerStr = "1 5 6 7";
        String expectValue = "1A0B";

        //then
        validateGuessNumber(inputAnswerStr, expectValue);
    }

    @Test
    public void should_return_0A2B_when_2_and_4_are_include() {
        //when
        String inputAnswerStr = "2 4 7 8";
        String expectValue = "0A2B";
        //then
        validateGuessNumber(inputAnswerStr, expectValue);
    }


    @Test
    public void should_return_2A2B_when_1_3_are_correct_and_4_2_are_include() {
        //when
        String inputAnswerStr = "1 4 3 2";
        String expectValue = "2A2B";
        //then
        validateGuessNumber(inputAnswerStr, expectValue);
    }

    @Test
    public void should_record_every_guess_result() {
        game.guess(Answer.createAnswer("2 1 6 7"));
        game.guess(Answer.createAnswer("1 2 3 4"));

        List<GuessResult> guessResults = game.guessHistory();

        assertThat(guessResults.size(), is(2));
        assertThat(guessResults.get(0).result(), is("0A2B"));
        assertThat(guessResults.get(0).inputAnswer().toString(), is("2 1 6 7"));

        assertThat(guessResults.get(1).result(), is("4A0B"));
        assertThat(guessResults.get(1).inputAnswer().toString(), is("1 2 3 4"));
    }

    private void validateGuessNumber(String inputAnswerStr, String expectValue) {
        Answer inputAnswer = Answer.createAnswer(inputAnswerStr);

        //when
        String result = game.guess(inputAnswer);

        //then
        assertThat(result, is(expectValue));
    }
}
